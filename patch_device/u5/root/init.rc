on early-init
    start ueventd

on init
    export PATH /sbin
    export ANDROID_ROOT /system
    export ANDROID_DATA /data
    export EXTERNAL_STORAGE /sdcard
    export LD_LIBRARY_PATH .:/sbin
    export PS1 sndnvaps@root:{$PWD-?}#

    symlink /system/etc /etc
    symlink /sbin/busybox /sbin/sh 
    chmod 755 /sbin/busybox 

    mkdir /sdcard
    mkdir /system
    mkdir /data
    mkdir /cache
    mkdir /external_sd 
    mount /tmp /tmp tmpfs

    chown root shell /tmp
    chmod 0775 /tmp

    write /sys/class/android_usb/android0/f_mass_storage/nluns 1

    write /sys/class/android_usb/android0/enable 0
    write /sys/class/android_usb/android0/idVendor 19d2
    write /sys/class/android_usb/android0/idProduct 0363
    write /sys/class/android_usb/android0/bcdDevice 1001
    write /sys/class/android_usb/android0/iSerial ${ro.serialno}
    write /sys/class/android_usb/android0/functions mass_storage
    write /sys/class/android_usb/android0/iManufacturer ${ro.product.manufacturer}
    write /sys/class/android_usb/android0/iProduct ${ro.product.model}

on boot

    ifup lo
    hostname localhost
    domainname localdomain

    class_start default

service ueventd /sbin/ueventd
    critical

service recovery /sbin/recovery

service adbd /sbin/adbd recovery
    disabled

on property:sys.usb.config=mass_storage
    write /sys/class/android_usb/android0/enable 0
    write /sys/class/android_usb/android0/idVendor 19d2
    write /sys/class/android_usb/android0/idProduct 0120
    write /sys/class/android_usb/android0/bcdDevice 1000
    write /sys/class/android_usb/android0/iSerial ${ro.serialno}
    write /sys/class/android_usb/android0/functions ${sys.usb.config}
    write /sys/class/android_usb/android0/enable 1

on property:sys.usb.config=mass_storage,adb
    write /sys/class/android_usb/android0/enable 0
    write /sys/class/android_usb/android0/idVendor 19d2
    write /sys/class/android_usb/android0/idProduct 0363
    write /sys/class/android_usb/android0/bcdDevice 1001
    write /sys/class/android_usb/android0/iSerial ${ro.serialno}
    write /sys/class/android_usb/android0/functions ${sys.usb.config}
    write /sys/class/android_usb/android0/enable 1
    start adbd

# Always start adbd on userdebug and eng builds
on property:ro.debuggable=1
    setprop sys.usb.config mass_storage,adb

on property:ro.debuggable=0
    setprop sys.usb.config mass_storage

# Restart adbd so it can run as root
on property:service.adb.root=1
    write /sys/class/android_usb/android0/enable 0
    restart adbd
    write /sys/class/android_usb/android0/enable 1
