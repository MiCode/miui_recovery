From 0c27228cdd07d6d9eb942c35dc28adef3aa38319 Mon Sep 17 00:00:00 2001
From: Koushik Dutta <koushd@gmail.com>
Date: Wed, 12 Dec 2012 17:15:18 -0800
Subject: [PATCH] Fix crash in recovery that occurs during backup.

Change-Id: I8d13646eede75c64878b50a8b6f4617a48e10b32
---
 libcrecovery/popen.c | 25 +++++++++++--------------
 1 file changed, 11 insertions(+), 14 deletions(-)

diff --git a/libcrecovery/popen.c b/libcrecovery/popen.c
index 73d3c74..59a7bd4 100644
--- a/libcrecovery/popen.c
+++ b/libcrecovery/popen.c
@@ -50,6 +50,8 @@ static struct pid {
 	pid_t pid;
 } *pidlist;
 
+extern char **environ;
+
 FILE *
 __popen(const char *program, const char *type)
 {
@@ -57,6 +59,7 @@ __popen(const char *program, const char *type)
 	FILE *iop;
 	int pdes[2];
 	pid_t pid;
+	char *argp[] = {"sh", "-c", NULL, NULL};
 
 	if ((*type != 'r' && *type != 'w') || type[1] != '\0') {
 		errno = EINVAL;
@@ -71,7 +74,7 @@ __popen(const char *program, const char *type)
 		return (NULL);
 	}
 
-	switch (pid = vfork()) {
+	switch (pid = fork()) {
 	case -1:			/* Error. */
 		(void)close(pdes[0]);
 		(void)close(pdes[1]);
@@ -82,24 +85,17 @@ __popen(const char *program, const char *type)
 	    {
 		struct pid *pcur;
 		/*
-		 * because vfork() instead of fork(), must leak FILE *,
-		 * but luckily we are terminally headed for an execl()
+		 * We fork()'d, we got our own copy of the list, no
+		 * contention.
 		 */
 		for (pcur = pidlist; pcur; pcur = pcur->next)
 			close(fileno(pcur->fp));
 
 		if (*type == 'r') {
-			int tpdes1 = pdes[1];
-
 			(void) close(pdes[0]);
-			/*
-			 * We must NOT modify pdes, due to the
-			 * semantics of vfork.
-			 */
-			if (tpdes1 != STDOUT_FILENO) {
-				(void)dup2(tpdes1, STDOUT_FILENO);
-				(void)close(tpdes1);
-				tpdes1 = STDOUT_FILENO;
+			if (pdes[1] != STDOUT_FILENO) {
+				(void)dup2(pdes[1], STDOUT_FILENO);
+				(void)close(pdes[1]);
 			}
 		} else {
 			(void)close(pdes[1]);
@@ -108,7 +104,8 @@ __popen(const char *program, const char *type)
 				(void)close(pdes[0]);
 			}
 		}
-		execl(_PATH_BSHELL, "sh", "-c", program, (char *)NULL);
+		argp[2] = (char *)program;
+		execve(_PATH_BSHELL, argp, environ);
 		_exit(127);
 		/* NOTREACHED */
 	    }
-- 
1.8.1.2

